apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: storage-layer
  labels:
    app: storage-layer
spec:
  serviceName: storage-layer
  selector:
    matchLabels:
      app: storage-layer
  replicas: 1
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: storage-layer
    spec:
      initContainers:
      # Copy the configuration from the image into the temporary volume shared by both PODs.
      - name: storage-layer-conf
        image: nscale/storage-layer:8.0
        imagePullPolicy: Always
        command: [ "/bin/sh", "-c" ]
        args:
        - |
          if ! [ "$(ls -A /mnt/etc/)" ]; then
            cp -a /opt/ceyoniq/nscale-server/storage-layer/etc/* /mnt/etc/
          fi
        volumeMounts:
        - name: storage-layer-etc
          mountPath: /mnt/etc
      containers:
      - name: storage-layer    
        image: nscale/storage-layer:8.0
        imagePullPolicy: Always
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - /opt/ceyoniq/nscale-server/storage-layer/bin/readiness-probe.sh
          periodSeconds: 10
        env:
        - name: LOG_APPENDER
          value: "Console"
        ports:
        - containerPort: 3005
          name: storage
        resources:
          limits:
            cpu: "2000m"
            memory: "1000Mi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        volumeMounts:
        - name: license
          subPath: license.xml
          mountPath: /opt/ceyoniq/nscale-server/storage-layer/etc/license.xml
        - name: storage-layer-etc
          mountPath: /opt/ceyoniq/nscale-server/storage-layer/etc
        - name: storage-layer
          subPath: da
          mountPath: /opt/ceyoniq/nscale-server/storage-layer/da
        - name: storage-layer
          subPath: arc
          mountPath: /opt/ceyoniq/nscale-server/storage-layer/arc
        - name: storage-layer-hd
          mountPath: /opt/ceyoniq/nscale-server/storage-layer/hd
      volumes:
      - name: license
        configMap:
          name: storage-layer-license
      - name: storage-layer-etc
        emptyDir: {}
      - name: storage-layer
        persistentVolumeClaim:
          claimName: storage-layer
      - name: storage-layer-hd
        persistentVolumeClaim:
          claimName: storage-layer-hd
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: storage-layer
  labels:
    app: storage-layer
spec:
  ports:
  - port: 3005
    name: storage-layer
  selector:
    app: storage-layer