apiVersion: apps/v1
kind: Deployment
metadata:
  name: application-layer-web
  labels:
    app: application-layer-web
spec:
  selector:
    matchLabels:
      app: application-layer-web
  replicas: 1
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: application-layer-web
    spec:
      initContainers:
      # Copy the configuration from the image into the temporary volume shared by both PODs.
      - name: application-layer-web-conf
        image: nscale/application-layer-web:8.0
        imagePullPolicy: Always
        command: [ "/bin/sh", "-c" ]
        args:
        - |
          if ! [ "$(ls -A /mnt/conf/)" ]; then
            cp -a /opt/ceyoniq/nscale-server/application-layer-web/conf/* /mnt/conf/
          fi
        volumeMounts:
        - name: application-layer-web-conf
          mountPath: /mnt/conf          
      containers:
      - name: application-layer-web
        image: nscale/application-layer-web:8.0
        imagePullPolicy: Always
        env:
          - name: nscale-host
            value: application-layer
          - name: nscale-port
            value: "8080"
          - name: nscale-instance
            value: nscalealinst1
          - name: nscale-ssl
            value: "false"
          - name: JAVA_OPTS
            value: "-XX:MaxRAMPercentage=75.0"            
          - name: log4jConfigLocation
            value: ../conf/nscale_stdout_log_conf.xml
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - /opt/ceyoniq/nscale-server/application-layer-web/bin/readiness-probe.sh
          periodSeconds: 10
          initialDelaySeconds: 10
        ports:
        - containerPort: 8090
          name: web
        resources:
          limits:
            cpu: "2000m"
            memory: "1300Mi"
          requests:
            cpu: "100m"
            memory: "700Mi"
        volumeMounts:
        - name: application-layer-web-conf
          mountPath: /opt/ceyoniq/nscale-server/application-layer-web/conf
      volumes:
      - name: application-layer-web-conf
        persistentVolumeClaim:
          claimName: application-layer-web-conf
      imagePullSecrets:
      - name: regcred
---
apiVersion: v1
kind: Service
metadata:
  name: application-layer-web
  labels:
    service: application-layer-web
spec:
  ports:
  - port: 8090
    name: web
    targetPort: 8090
  selector:
    app: application-layer-web