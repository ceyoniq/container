apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: pipeliner
  labels:
    app: pipeliner
spec:
  serviceName: pipeliner
  selector:
    matchLabels:
      app: pipeliner
  replicas: 0
  updateStrategy:
    type: OnDelete
  template:
    metadata:
      labels:
        app: pipeliner
    spec:
      automountServiceAccountToken: false
      imagePullSecrets:
      - name: regcred
      initContainers:
      - name: wait-for-application-layer
        image: docker.io/curlimages/curl:8.4.0
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args:
        - >
          while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://application-layer:8080/index.html)" != "200" ]]; do
            echo '.'
            sleep 5;
          done
        resources:
          limits:
            cpu: "200m"
            memory: "200Mi"
            ephemeral-storage: "350Mi"
          requests:
            cpu: "100m"
            memory: "100Mi"
            ephemeral-storage: "300Mi"
      containers:
      - name: pipeliner
        image: ceyoniq.azurecr.io/release/nscale/pipeliner:ubi.9.1.1501.2024021911
        imagePullPolicy: Always
        startupProbe:
          exec:
            command:
            - "java"
            - "-jar"
            - "/opt/ceyoniq/nscale-pipeliner/javalibs/PipelinerCheck.jar"
            - "localhost"
            - "4173"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - "java"
            - "-jar"
            - "/opt/ceyoniq/nscale-pipeliner/javalibs/PipelinerCheck.jar"
            - "localhost"
            - "4173"
          periodSeconds: 30
          timeoutSeconds: 3
        resources:
          limits:
            cpu: "1000m"
            memory: "2000Mi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        volumeMounts:
        - name: license
          subPath: license.xml
          mountPath: /opt/ceyoniq/nscale-pipeliner/workdir/license.xml
        - name: config
          subPath: cold.xml
          mountPath: /opt/ceyoniq/nscale-pipeliner/workdir/config/runtime/cold.xml
        - name: pipeliner-setup
          subPath: setup.sh
          mountPath: /setup.sh
        - name: pipeliner-data
          mountPath: /opt/ceyoniq/nscale-pipeliner/workdir/data
      volumes:
      - name: license
        configMap:
          name: license
      - name: pipeliner-data
        persistentVolumeClaim:
          claimName: pipeliner-data
      - name: config
        configMap:
          name: pipeliner-config
      - name: pipeliner-setup
        configMap:
          name: pipeliner-setup
  volumeClaimTemplates:
  - metadata:
      name: pipeliner-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 8Gi
---
apiVersion: v1
kind: Service
metadata:
  name: pipeliner
spec:
  ports:
  - port: 4173
    targetPort: 4173
    name: pipeliner
    appProtocol: tcp
  selector:
    app: pipeliner