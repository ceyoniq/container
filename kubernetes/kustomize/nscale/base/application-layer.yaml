apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeping-svc-account

---

apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeping-role
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeping-role-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeping-role
subjects:
- kind: ServiceAccount
  name: kubeping-svc-account

--- 

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  serviceName: application-layer
  selector:
    matchLabels:
      app: application-layer
  replicas: 1
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: application-layer
        ceyoniq.com/application-layer-cluster-name: "cluster1" 
    spec:
      imagePullSecrets:
      - name: regcred
      serviceAccountName: kubeping-svc-account
      initContainers:
      # wait for database to be ready
      - name: check-db-ready
        image: bitnami/postgresql:11.6.0
        command: ['sh', '-c',
          'until pg_isready -U postgres -h postgresql -p 5432;
          do echo waiting for database; sleep 2; done;']
      containers:
      - name: application-layer
        image: ceyoniq.azurecr.io/release/nscale/application-layer:8.0.5003.2021033114.23093603638
        env:
          - name: INSTANCE1_INSTANCE_LOGGER_CONF
            value: "instance1-log-console.conf"
          - name: INSTANCE1_CORE_DB_DIALECT
            value: "PostgreSQL"
          - name: INSTANCE1_CORE_DB_DRIVERCLASS
            value: "org.postgresql.Driver"
          - name: INSTANCE1_CORE_DB_URL
            value: "jdbc:postgresql://postgresql:5432/nscale?loggerLevel=OFF"
          - name: INSTANCE1_CORE_DB_USERNAME
            value: "nscale"
          - name: INSTANCE1_CORE_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: postgresql-password
          - name: INSTANCE1_CORE_DB_SCHEMA
            value: "public"
          - name: INITIALIZE_DOCUMENT_AREA
            value: "DA"
          - name: INSTANCE1_CLUSTER_CORE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: INSTANCE1_CLUSTER_CORE_DESCRIPTION
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace                
          - name: JAVA_OPTS
            value: "-XX:MaxRAMPercentage=75.0"            
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE1_CORE_FULLTEST_INDEX_MIRROR_LOCALCACHE
            value: "off"           
        livenessProbe:
          tcpSocket:
            port: 20626
          periodSeconds: 5
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - /opt/ceyoniq/nscale-server/application-layer/bin/readiness-probe.sh
          periodSeconds: 10
          initialDelaySeconds: 30
        ports:
        - containerPort: 8080
          name: application
        resources:
          limits:
            cpu: "2000m"
            memory: "3000Mi"
          requests:
            cpu: "100m"
            memory: "1000Mi"
        volumeMounts:
        - name: license
          subPath: license.xml
          mountPath: /opt/ceyoniq/nscale-server/application-layer/conf/license.xml
      volumes:
      - name: license
        configMap:
          name: application-layer-license
---
apiVersion: v1
kind: Service
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  ports:
  - port: 8080
    name: application
  clusterIP: None
  selector:
    app: application-layer