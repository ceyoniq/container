apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  serviceName: application-layer
  selector:
    matchLabels:
      app: application-layer
  replicas: 1
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: application-layer
        ceyoniq.com/application-layer-cluster-name: cluster1
    spec:
      automountServiceAccountToken: false
      containers:
      - name: application-layer
        image: ceyoniq.azurecr.io/release/nscale/application-layer:ubi.9.3.1401.2025013021
        imagePullPolicy: Always
        startupProbe:
          httpGet:
            path: /index.html
            port: application
          initialDelaySeconds: 60
          failureThreshold: 10
        livenessProbe:
          httpGet:
            path: /nscalealinst1/rest/configuration/sysinfo.json
            port: application
          initialDelaySeconds: 60
          timeoutSeconds: 3
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /jmx/status
            port: application
          failureThreshold: 3
        env:
          - name: INSTANCE1_INSTANCE_LOGGER_CONF
            value: "log4j/instance1-log.xml"
          - name: INSTANCE1_CORE_DB_DIALECT
            value: "PostgreSQL"
          - name: INSTANCE1_CORE_DB_DRIVERCLASS
            value: "org.postgresql.Driver"
          - name: INSTANCE1_CORE_DB_URL
            value: "jdbc:postgresql://postgresql:5432/nscale?loggerLevel=OFF"
          - name: INSTANCE1_CORE_DB_SCHEMA
            value: "nscale"
          - name: INSTANCE1_CORE_DB_USERNAME
            value: "nscale"
          - name: INSTANCE1_CORE_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: nscale-password
          - name: INSTANCE1_CLUSTER_CORE_STACKTYPE
            value: "KUBERNETES"
          - name: INSTANCE1_JGROUPS_DNS_QUERY
            value: "application-layer"
          - name: INSTANCE1_CLUSTER_CORE_CLUSTER_ID
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE1_CLUSTER_CORE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: INSTANCE1_CLUSTER_CORE_DESCRIPTION
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: JAVA_OPTS          
            value: -XX:MaxRAMPercentage=50.0 -Duser.country=DE -Duser.language=de -Djava.io.tmpdir=/opt/ceyoniq/nscale-server/application-layer/temp/transfer
          - name: METRICS_ALLOW_REMOTE_REQUESTS
            value: "true"
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
        ports:
        - containerPort: 8080
          name: application
        volumeMounts:
        - name: license
          subPath: license.xml
          mountPath: /opt/ceyoniq/nscale-server/application-layer/conf/license.xml
        - name: log4j
          mountPath: /opt/ceyoniq/nscale-server/application-layer/conf/log4j
        - name: logs
          mountPath: /opt/ceyoniq/nscale-server/application-layer/logs
        - name: temp
          mountPath: /opt/ceyoniq/nscale-server/application-layer/temp
        - name: podinfo
          mountPath: /etc/podinfo
      terminationGracePeriodSeconds: 100
      volumes:
      # https://kubernetes.io/docs/tasks/inject-data-application/downward-api-volume-expose-pod-information/
      - name: podinfo
        downwardAPI:
          items:
            - path: "labels"
              fieldRef:
                fieldPath: metadata.labels
            - path: "annotations"
              fieldRef:
                fieldPath: metadata.annotations
      - name: license
        configMap:
          name: license
      - name: log4j
        configMap:
          name: application-layer-log4j
      - name: logs
        emptyDir:
          sizeLimit: 50Mi
      - name: temp
        emptyDir:
          sizeLimit: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  clusterIP: None
  ports:
  - port: 8080
    targetPort: 8080
    name: application
    appProtocol: http
  selector:
    app: application-layer

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: application-layer

