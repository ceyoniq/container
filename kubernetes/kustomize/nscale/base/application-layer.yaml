apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  serviceName: application-layer
  selector:
    matchLabels:
      app: application-layer
  replicas: 1
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: application-layer
        ceyoniq.com/application-layer-cluster-name: "cluster1"
    spec:
      serviceAccountName: kubeping-svc-account
      imagePullSecrets:
      - name: regcred
      initContainers:
      # wait for database to be ready
      - name: check-db-ready
        image: bitnami/postgresql:14
        imagePullPolicy: Always
        command: ["/bin/sh", "-c"]
        args:
        - >
          until pg_isready -U postgres -h postgresql -p 5432; do
            echo '.';
            sleep 2;
          done
      containers:
      - name: application-layer
        image: ceyoniq.azurecr.io/release/nscale/application-layer:8.4.1501.2023022808
        imagePullPolicy: Always
        startupProbe:
          httpGet:
            path: /index.html
            port: 8080
          initialDelaySeconds: 30
          failureThreshold: 10
          periodSeconds: 10
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /index.html
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /jmx/status
            port: 8080
          periodSeconds: 10
          timeoutSeconds: 1
        env:
          - name: INSTANCE1_INSTANCE_LOGGER_CONF
            value: "log4j/instance1-log.xml"
          - name: INSTANCE1_CORE_DB_DIALECT
            value: "PostgreSQL"
          - name: INSTANCE1_CORE_DB_DRIVERCLASS
            value: "org.postgresql.Driver"
          - name: INSTANCE1_CORE_DB_URL
            value: "jdbc:postgresql://postgresql:5432/nscale?loggerLevel=OFF"
          - name: INSTANCE1_CORE_DB_USERNAME
            value: "nscale"
          - name: INSTANCE1_CORE_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: postgresql
                key: postgresql-password
          - name: INSTANCE1_CORE_DB_SCHEMA
            value: "public"
          - name: INSTANCE1_CLUSTER_CORE_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: INSTANCE1_CLUSTER_CORE_DESCRIPTION
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: JAVA_OPTS
            value: -XX:MaxRAMPercentage=50.0
          - name: KUBERNETES_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: INSTANCE1_CORE_FULLTEST_INDEX_MIRROR_LOCALCACHE
            value: "off"
        ports:
        - containerPort: 8080
          name: application
        resources:
          limits:
            cpu: "2000m"
            memory: "3000Mi"
          requests:
            cpu: "100m"
            memory: "1000Mi"
        volumeMounts:
        - name: license
          subPath: license.xml
          mountPath: /opt/ceyoniq/nscale-server/application-layer/conf/license.xml
        - name: log4j
          mountPath: /opt/ceyoniq/nscale-server/application-layer/conf/log4j
        - name: logs
          mountPath: /opt/ceyoniq/nscale-server/application-layer/logs
        - name: temp
          mountPath: /opt/ceyoniq/nscale-server/application-layer/temp
      terminationGracePeriodSeconds: 100
      volumes:
      - name: license
        configMap:
          name: license
      - name: log4j
        configMap:
          name: application-layer-log4j
      - name: logs
        emptyDir: {}
      - name: temp
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: application-layer
  labels:
    app: application-layer
spec:
  ports:
  - port: 8080
    name: application
  clusterIP: None
  selector:
    app: application-layer
