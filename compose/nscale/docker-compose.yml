version: "3.5"

networks:
  nscale:

volumes:
  postgresql_data: {}
  storage-layer_arc: {}
  storage-layer_da: {}
  storage-layer_etc: {}
  storage-layer_hd: {}
  rendition-server_share: {}
  rms_config:
    driver_opts:
      type: tmpfs
      device: tmpfs
      o: size=1m,uid=1001
  application-layer_conf: {}
  application-layer-web_conf: {}
  console_conf: {}
  monitoring-console_workspace: {}
  rendition-server_conf: {}

services:
  postgresql:
    image: ${POSTGRESQL_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    volumes:
      - postgresql_data:/bitnami/postgresql
      - ./config/postgresql/0_setup.sh:/docker-entrypoint-initdb.d/0_setup.sh
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=password # environment variable when running the image for the first time
      - NSCALE_USERNAME=nscale
      - NSCALE_DATABASE=nscale
      - NSCALE_PASSWORD=password 
    networks:
      - nscale

  storage-layer:
    image: ${STORAGE_LAYER_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    stop_signal: SIGTERM
    volumes:
      - rms_config:/ceyoniq/etc:rw
      - storage-layer_hd:/mnt
      - storage-layer_arc:/opt/ceyoniq/nscale-server/storage-layer/arc
      - storage-layer_da:/opt/ceyoniq/nscale-server/storage-layer/da
      - storage-layer_etc:/opt/ceyoniq/nscale-server/storage-layer/etc
      - ${STORAGE_LAYER_LICENSE_FILE}:/opt/ceyoniq/nscale-server/storage-layer/etc/license.xml:ro
    environment:
      - LOG_APPENDER=Console
      - NSTL_STORAGE-LAYER_LOGLEVEL=4
      - NSTL_ARCHIVETYPE_900_NAME=NSCALE_DEMO
      - NSTL_ARCHIVETYPE_900_ID=900
      - NSTL_ARCHIVETYPE_900_LOCALMIGRATION=0
      - NSTL_ARCHIVETYPE_900_LOCALMIGRATIONTYPE=HD
      - NSTL_ARCHIVETYPE_900_HARDDISK=1
      - NSTL_HarddiskDevice_0_ARCHIVETYPES=NSCALE_DEMO
      - NSTL_HarddiskDevice_0_INDEX=1
      - NSTL_HarddiskDevice_0_NAME=HD
      - NSTL_HarddiskDevice_0_PATH=/mnt
      - NSTL_HarddiskDevice_0_PERMANENTMIGRATION=1
    networks:
      - nscale

  application-layer:
    image: ${APPLICATION_LAYER_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    volumes:
      - rms_config:/ceyoniq/etc:rw
      - application-layer_conf:/opt/ceyoniq/nscale-server/application-layer/conf:rw
      - ${APPLICATION_LAYER_LICENSE_FILE}:/opt/ceyoniq/nscale-server/application-layer/conf/license.xml:ro
    environment:
      - INSTANCE1_INSTANCE_LOGGER_CONF=instance1-log-console.conf
      - INSTANCE1_CORE_DB_DIALECT=PostgreSQL
      - INSTANCE1_CORE_DB_DRIVERCLASS=org.postgresql.Driver
      - INSTANCE1_CORE_DB_URL=jdbc:postgresql://postgresql:5432/nscale?loggerLevel=OFF
      - INSTANCE1_CORE_DB_USERNAME=nscale
      - INSTANCE1_CORE_DB_PASSWORD=password # Do not use this password in production!
      - INSTANCE1_CORE_DB_SCHEMA=public
      - INITIALIZE_DOCUMENT_AREA=DA
    networks:
      - nscale
    depends_on:
      - postgresql

  application-layer-web:
    image: ${APPLICATION_LAYER_WEB_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    volumes:
      - rms_config:/ceyoniq/etc:rw
      - application-layer-web_conf:/opt/ceyoniq/nscale-server/application-layer-web/conf:rw
    environment:
      - nscale-host=application-layer
      - nscale-port=8080
      - nscale-instance=nscalealinst1
      - nscale-ssl=false
      - log4jConfigLocation=../conf/nscale_stdout_log_conf.xml
    networks:
      - nscale

  console:
    image: ${CONSOLE_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    volumes:
      - rms_config:/ceyoniq/etc:rw
      - console_conf:/opt/ceyoniq/nscale-server/console/conf:rw
    environment:
      - LOG_APPENDER=Console
      - HostName=application-layer
      - Port=8080
      - NAPPL_SSL=0
      - ALInstance=nscalealinst1
    networks:
      - nscale

  monitoring-console:
    image: ${MONITORING_CONSOLE_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    stop_signal: SIGTERM
    volumes:
      - rms_config:/ceyoniq/etc:rw
      - monitoring-console_workspace:/opt/ceyoniq/nscale-monitoring/workspace:rw
      - ${MONITORING_CONSOLE_LICENSE_FILE}:/opt/ceyoniq/nscale-monitoring/workspace/license.xml:ro
    networks:
      - nscale

  rendition-server:
    image: ${RENDITION_SERVER_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    volumes:
      - rms_config:/ceyoniq/etc:rw
      - rendition-server_share:/opt/ceyoniq/nscale-rendition-server/share:rw
      - rendition-server_conf:/opt/ceyoniq/nscale-rendition-server/conf:rw
      - ${RENDITION_SERVER_LICENSE_FILE}:/opt/ceyoniq/nscale-rendition-server/conf/license.xml:ro
    environment:
      - RSX_APPENDER=Console
    networks:
      - nscale

  administrator:
    image: ${ADMINISTRATOR_IMAGE}
    hostname: ${CONTAINER_HOSTNAME}
    networks:
      - nscale      

  rms:
    image: ${RMS_IMAGE}
    hostname: ${RMS_HOSTNAME}
    volumes:
      - rms_config:/etc/ceyoniq/nscale-rms/repository/
      - storage-layer_arc:/opt/ceyoniq/nscale-server/storage-layer/arc
      - storage-layer_da:/opt/ceyoniq/nscale-server/storage-layer/da
      - storage-layer_etc:/opt/ceyoniq/nscale-server/storage-layer/etc
      - ${STORAGE_LAYER_LICENSE_FILE}:/opt/ceyoniq/nscale-server/storage-layer/etc/license.xml:ro
      - application-layer_conf:/opt/ceyoniq/nscale-server/application-layer/conf:rw
      - ${APPLICATION_LAYER_LICENSE_FILE}:/opt/ceyoniq/nscale-server/application-layer/conf/license.xml:ro
      - application-layer-web_conf:/opt/ceyoniq/nscale-server/application-layer-web/conf:rw
      - console_conf:/opt/ceyoniq/nscale-server/console/conf:rw
      - rendition-server_conf:/opt/ceyoniq/nscale-rendition-server/conf:rw
      - ${RENDITION_SERVER_LICENSE_FILE}:/opt/ceyoniq/nscale-rendition-server/conf/license.xml:ro
      - monitoring-console_workspace:/opt/ceyoniq/nscale-monitoring/workspace:rw
      - ${MONITORING_CONSOLE_LICENSE_FILE}:/opt/ceyoniq/nscale-monitoring/workspace/license.xml:ro
    networks:
      - nscale
    ports:
      - "${RMS_PORT:-3120}:3120" # Do not use default rms password in production!
    depends_on:
      - storage-layer
      - application-layer
      - application-layer-web
      - console
      - rendition-server
