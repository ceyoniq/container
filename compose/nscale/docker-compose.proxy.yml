
services:

  application-layer:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.application.rule=PathPrefix(`/nscalealinst1`) || PathPrefix(`/res/`) || Path(`/engine.properties`) || Path(`/index.html`)"
      - "traefik.http.routers.application.entrypoints=web"
      - "traefik.http.services.application.loadbalancer.server.port=8080"

  application-layer-web:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/nscale_web`)"
      - "traefik.http.routers.web.entrypoints=web"
      - "traefik.http.services.web.loadbalancer.server.port=8090"

  console:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.console.rule=PathPrefix(`/console`)"
      - "traefik.http.routers.console.entrypoints=web"
      - "traefik.http.services.console.loadbalancer.server.port=8086"

  administrator:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.administrator.rule=PathPrefix(`/rapadm`)"
      - "traefik.http.routers.administrator.entrypoints=web"
      - "traefik.http.services.administrator.loadbalancer.server.port=8080"

  process-automation-modeler:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.modeler.rule=PathPrefix(`/modeler`)"
      - "traefik.http.routers.modeler.entrypoints=web"
      - "traefik.http.services.modeler.loadbalancer.server.port=8092"

  traefik:
    image: ${TRAEFIK_IMAGE}
    container_name: traefik
    command:
      - "--api=false"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      #- "--log.level=DEBUG" # Enable debugging
      #- "--api.insecure=true"
    ports:
      - "${TRAEFIK_EXTERNAL_HTTP_PORT}:80"
      #- "9090:8080" # Enable the Traefik Dashboard (set --api=true and --api.insecure=true)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - nscale
